cleari()
val cb = canvasBounds
drawStage(black)
setSpeed(fast)

val background =scale(0.94, 1.14) -> Picture.image("C:/Users/MMS3/Pictures/space.jfif")
val player =  scale(0.2,0.2)->Picture.image("C:/Users/MMS3/Pictures/w.png")

val bird = scale(0.2, 0.2) -> Picture.image("C:/Users/MMS3/Pictures/c.png")
val asteroid = scale(0.1, 0.1) -> Picture.image("C:/Users/MMS3/Pictures/y2.png")
  val asteroid1= scale(0.1, 0.1) -> Picture.image("C:/Users/MMS3/Pictures/y2.png")
  val asteroid2 = scale(0.1, 0.1) -> Picture.image("C:/Users/MMS3/Pictures/y2.png")
  val asteroid3 = scale(0.1, 0.1) -> Picture.image("C:/Users/MMS3/Pictures/y2.png")
  val asteroid4 = scale(0.1, 0.1) -> Picture.image("C:/Users/MMS3/Pictures/y2.png")
  val asteroid5= scale(0.1, 0.1) -> Picture.image("C:/Users/MMS3/Pictures/y2.png")
  val asteroid6 = scale(0.1, 0.1) -> Picture.image("C:/Users/MMS3/Pictures/y2.png")
  val asteroid7= scale(0.1, 0.1) -> Picture.image("C:/Users/MMS3/Pictures/y2.png")
val stageborder= Picture{
    forward(640)
    right(90)
     forward(940)
    right(90)
        forward(630)
            right(90)
              forward(940)
}
background.setPosition(-470, -320)
stageborder.setPosition(-470, -320)
stageborder.setPenColor(orange)
asteroid.setPosition(-300, -160)
asteroid1.setPosition(-450, -320)
asteroid2.setPosition(-320, -300)
asteroid3.setPosition(-390, -320)
asteroid4.setPosition(-360, -160)
asteroid5.setPosition(-390, -210)
asteroid6.setPosition(-350, -260)
asteroid7.setPosition(-340, -220)
bird.setPosition(300, 200)

draw(player)
draw(bird)
draw(asteroid)
draw(asteroid1)
draw(asteroid2)
draw(asteroid3)
draw(asteroid4)
draw(asteroid5)
draw(asteroid6)
draw(asteroid7)
draw(stageborder)
draw(background)
var bvel = Vector2D(7, 20)
var cvel = Vector2D(20, 40)
var dvel = Vector2D(1, 0)
val speed = 50
animate {
    bird.translate(bvel)
    asteroid.translate(cvel)
      asteroid1.translate(cvel)
        asteroid2.translate(cvel)
          asteroid3.translate(cvel)
             asteroid4.translate(cvel)
     asteroid5.translate(cvel)
     asteroid6.translate(cvel)
     asteroid7.translate(cvel)
  
    if (bird.collidesWith(stageborder)) {
    
        bvel = bouncePicVectorOffStage(bird, bvel)

    }
    if (player.collidesWith(stageborder)) {
       var vel = Vector2D(10, 10)
        vel = bouncePicVectorOffStage(player, vel)

    }
    



    

    if (player.collidesWith(bird)) {
        player.setOpacity(0.3)
        drawCenteredMessage("You Lose", Color(255, 24, 27), 30)
        stopAnimation()
    }
     if (player.collidesWith(asteroid)) {
        player.setOpacity(0.3)
        drawCenteredMessage("You Lose", Color(255, 24, 27), 30)
        stopAnimation()
    }
      if (player.collidesWith(asteroid1)) {
        player.setOpacity(0.3)
        drawCenteredMessage("You Lose", Color(255, 24, 27), 30)
        stopAnimation()
    }
      if (player.collidesWith(asteroid2)) {
        player.setOpacity(0.3)
        drawCenteredMessage("You Lose", Color(255, 24, 27), 30)
        stopAnimation()
    }
      if (player.collidesWith(asteroid3)) {
        player.setOpacity(0.3)
        drawCenteredMessage("You Lose", Color(255, 24, 27), 30)
        stopAnimation()
    }
      if (player.collidesWith(asteroid4)) {
        player.setOpacity(0.3)
        drawCenteredMessage("You Lose", Color(255, 24, 27), 30)
        stopAnimation()
    }
      if (player.collidesWith(asteroid5)) {
        player.setOpacity(0.3)
        drawCenteredMessage("You Lose", Color(255, 24, 27), 30)
        stopAnimation()
    }
  if (player.collidesWith(asteroid6)) {
        player.setOpacity(0.3)
        drawCenteredMessage("You Lose", Color(255, 24, 27), 30)
        stopAnimation()
        
    } 
    if (player.collidesWith(asteroid7)) {
        player.setOpacity(0.3)
        drawCenteredMessage("You Lose", Color(255, 24, 27), 30)
        stopAnimation()
    }
   

  

    if (isKeyPressed(Kc.VK_RIGHT)) {
        player.translate(speed, 0)
    }
    if (isKeyPressed(Kc.VK_LEFT)) {
        player.translate(-speed, 0)
    }
    if (isKeyPressed(Kc.VK_UP)) {
        player.translate(0, speed)
    }
    if (isKeyPressed(Kc.VK_DOWN)) {
        player.translate(0, -speed)
    }
}
activateCanvas()
